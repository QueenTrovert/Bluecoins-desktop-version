{"version":3,"sources":["Components/TemporaryDrawer.js","Components/AppBar.js","Components/Transactions.js","Components/MainTab.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","SwipeableTemporaryDrawer","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","map","Fragment","onClick","SwipeableDrawer","onClose","onOpen","className","clsx","role","onKeyDown","href","List","text","ListItem","button","ListItemIcon","ListItemText","primary","Divider","index","theme","root","flexGrow","menuButton","marginRight","spacing","color","title","defaultTheme","background","ButtonAppBar","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","Button","table","minWidth","createData","name","amount","rows","DenseTable","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","scope","TabPanel","props","children","value","other","hidden","id","aria-labelledby","Box","p","a11yProps","backgroundColor","palette","paper","ScrollableTabsButtonAuto","setValue","Tabs","onChange","newValue","indicatorColor","textColor","scrollButtons","Tab","label","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3223ca69.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <div>\r\n        <h2><b>Bluecoins</b></h2>\r\n        <p><a href=\"www.bluecoinsapp.com\">www.bluecoinsapp.com</a></p>\r\n      </div>\r\n      <List>\r\n        {['Main Dashboard'].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><DashboardIcon /></ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        {['Calendar'].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><DateRangeIcon/></ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        {['Categories & Budget'].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><ShoppingBasketIcon/></ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        {['Account Setup'].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><AccountBalanceIcon/></ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        {['Labels'].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><LocalOfferIcon/></ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        {['Trash'].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><DeleteIcon/></ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        {['Settings'].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><SettingsIcon/></ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      \r\n      <Divider />\r\n      <List>\r\n        {['QuickSync', 'Travel Mode'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <SyncIcon /> : <DriveEtaIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider/>\r\n      <List>\r\n        {['Tell A Friend', 'Send Feedback'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <PeopleIcon /> : <MessageIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider/>\r\n      {['Support Development'].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><InsertEmoticonIcon/></ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <MenuIcon onClick={toggleDrawer(anchor, true)}>{anchor}</MenuIcon>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TemporaryDrawer from './TemporaryDrawer.js';\r\n\r\n\r\nimport EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(1),\r\n    color: \"#ffffff\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  defaultTheme: {\r\n    background: '#3358ff',\r\n    color: \"#ffffff\"\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" className={classes.defaultTheme}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} aria-label=\"menu\">\r\n            <TemporaryDrawer/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>  \r\n          </Typography>\r\n          <Button><EmojiObjectsOutlinedIcon color=\"action\"/></Button>\r\n          <Button color=\"inherit\">Login</Button>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 50,\r\n  \r\n  },\r\n});\r\n\r\nfunction createData(name, amount) {\r\n  return { name, amount};\r\n}\r\n\r\nconst rows = [\r\n  createData('Grocery', 159),\r\n  createData('Electicity', 499),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Transaction</TableCell>\r\n            <TableCell align=\"right\">Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Transactions from './Transactions.js';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"MAIN\" {...a11yProps(0)} />\r\n          <Tab label=\"TRANSACTIONS\" {...a11yProps(1)} />\r\n          <Tab label=\"REMINDERS\" {...a11yProps(2)} />\r\n          <Tab label=\"BALANCE SHEET\" {...a11yProps(3)} />\r\n          <Tab label=\"NET EARNINGS\" {...a11yProps(4)} />\r\n          <Tab label=\"BUDGET SUMMARY\" {...a11yProps(5)} />\r\n          <Tab label=\"ITEMS SUMMARY\" {...a11yProps(6)} />\r\n          <Tab label=\"LABELS\" {...a11yProps(7)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        Item One\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Transactions/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Item Three\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        Item Four\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        Item Five\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        Item Six\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        Item Seven\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport AppBar from './Components/AppBar.js';\nimport MainTab from './Components/MainTab.js'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  defaultTheme: {\n    background: '#3358ff',\n  },\n}));\n\nfunction App() {  \n  const classes = useStyles();\n  return (\n    <div className={classes.defaultTheme}>\n      <AppBar className={classes.defaultTheme} />\n      <MainTab />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}